/*
Write a program to calculate integration using composite Simpson’s 1/3 rule.
*/
#include <stdio.h>

double composite_simpsons_1_3_rule(double (*f)(double), double a, double b, int n) {
    double h = (b - a) / n;
    double sum = f(a) + f(b);

    for (int i = 1; i < n; i += 2) {
        sum += 4 * f(a + i * h);
    }

    for (int i = 2; i < n - 1; i += 2) {
        sum += 2 * f(a + i * h);
    }

    return sum * h / 3;
}

double func(double x) {
    return x * x; // Example function x^2
}

int main() {
    double a, b;
    int n;

    printf("Enter the limits a and b: ");
    scanf("%lf %lf", &a, &b);
    printf("Enter the number of subintervals n (must be even): ");
    scanf("%d", &n);

    double result = composite_simpsons_1_3_rule(func, a, b, n);
    printf("Integration result using Composite Simpson’s 1/3 rule: %.6f\n", result);

    return 0;
}

/*
Enter the limits a and b: 0 2
Enter the number of subintervals n (must be even): 4
Integration result using Composite Simpson’s 1/3 rule: 2.666667
*/