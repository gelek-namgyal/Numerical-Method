/*
Write a program to evaluate integration of a function using Romberg integration formula.
*/

#include <stdio.h>
#include <math.h>

double func(double x) {
    return x * x; // Example function x^2
}

double romberg(double a, double b, int n) {
    double R[n][n];
    double h = b - a;

    // R[0][0]
    R[0][0] = (h / 2) * (func(a) + func(b));

    for (int i = 1; i < n; i++) {
        h /= 2;
        double sum = 0;

        for (int k = 1; k <= pow(2, i - 1); k++) {
            sum += func(a + (2 * k - 1) * h);
        }

        R[i][0] = 0.5 * R[i - 1][0] + h * sum;

        for (int j = 1; j <= i; j++) {
            R[i][j] = R[i][j - 1] + (R[i][j - 1] - R[i - 1][j - 1]) / (pow(4, j) - 1);
        }
    }

    return R[n - 1][n - 1];
}

int main() {
    double a, b;
    int n;

    printf("Enter the limits a and b: ");
    scanf("%lf %lf", &a, &b);
    printf("Enter the number of iterations: ");
    scanf("%d", &n);

    double result = romberg(a, b, n);
    printf("Integration result using Romberg Integration Formula: %.6f\n", result);

    return 0;
}

/*
Enter the limits a and b: 0 2
Enter the number of iterations: 4
Integration result using Romberg Integration Formula: 2.666667
*/
